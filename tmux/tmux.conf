unbind h
unbind j
unbind k
unbind l
unbind i
unbind C-space
unbind C-b
unbind '"'
unbind %
unbind f


# Status
set -g status-position top
set -g status-justify left
set -g status-right '%h %d | %I:%M '
set -g status-right-style 'fg=colour2'
set -g status-right-length 50
set -g status-style 'fg=colour0'
setw -g window-status-current-style 'fg=colour2 bg=colour0 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour2 bg=colour0 dim'
setw -g window-status-format ' #I #[fg=colour2]#W #[fg=colour2]#F '

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Vim mode
setw -g mode-keys vi

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

set -sg escape-time 0
# Color fix
set -g default-terminal "screen-256color"
set -as terminal-features ",xterm-256color:RGB"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# remap prefix from 'C-b' to 'C-space'
set-option -g prefix C-space
bind-key C-space send-prefix

# split panes using | and -
bind "\\" split-window -h
bind - split-window -v

# new window at current path
bind c new-window

# toggle window / session
bind space last-window
bind l next-window
bind h previous-window
bind C-space switch-client -l

# Resize
# bind -r C-j resize-pane -D 5
# bind -r C-k resize-pane -U 5
# bind -r C-h resize-pane -L 5
# bind -r C-l resize-pane -R 5

# cht.sh
bind -r i run-shell "tmux neww ${HOME}/Bash_scripts/cht.sh"

# Source config
bind r source-file ~/.config/tmux/tmux.conf\; display "Reloaded!"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# Pomodoro
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g status-left-style 'fg=colour2'
set -g status-left "#{pomodoro_status}"
set-option -ga status-left "#[fg=colour1] | "
set -g status-left-length 50
set -g @pomodoro_toggle 'p'                    # Start/pause a Pomodoro/break
set -g @pomodoro_cancel 'P'                    # Cancel the current session
set -g @pomodoro_skip '_'                      # Skip a Pomodoro/break

set -g @pomodoro_mins 45                       # The duration of the Pomodoro
set -g @pomodoro_break_mins 5                  # The duration of the break after the Pomodoro completes
set -g @pomodoro_long_break_mins 25            # The duration of the long break

set -g @pomodoro_interval_display ""

set -g @pomodoro_granularity 'on'             # Enables MM:SS (ex: 00:10) format instead of the default (ex: 1m)
set -g status-interval 1


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
